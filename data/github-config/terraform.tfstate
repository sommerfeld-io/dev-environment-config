{
  "version": 4,
  "terraform_version": "1.3.7",
  "serial": 94,
  "lineage": "919c77ac-68b8-7d84-5fb8-571df8aed163",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "bitwarden_item_login",
      "name": "GH_TOKEN_REPO_AND_PROJECT",
      "provider": "provider[\"registry.terraform.io/maxlaverse/bitwarden\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "attachments": [],
            "collection_ids": [],
            "creation_date": "2023-05-25T12:34:01.320Z",
            "deleted_date": null,
            "favorite": false,
            "field": [],
            "folder_id": "1cd707d1-846b-4623-9d3c-af70014c259a",
            "id": "d009712e-5f91-42fc-abdd-b00d00cf1948",
            "name": "GH_TOKEN_REPO_AND_PROJECT_sommerfeld-io",
            "notes": "",
            "object": "item",
            "organization_id": "",
            "password": "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",
            "reprompt": false,
            "revision_date": "2023-05-25T13:10:25.206Z",
            "totp": "",
            "type": 1,
            "uri": [],
            "username": "GH_TOKEN_REPO_AND_PROJECT"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "bitwarden_item_login",
      "name": "GOOGLE_CHAT_WEBHOOK",
      "provider": "provider[\"registry.terraform.io/maxlaverse/bitwarden\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "attachments": [],
            "collection_ids": [],
            "creation_date": "2022-12-19T20:11:05.683Z",
            "deleted_date": null,
            "favorite": false,
            "field": [],
            "folder_id": "1cd707d1-846b-4623-9d3c-af70014c259a",
            "id": "e2e02ec2-580b-4823-94bb-af70014ca324",
            "name": "GOOGLE_CHAT_WEBHOOK",
            "notes": "",
            "object": "item",
            "organization_id": "",
            "password": "https://chat.googleapis.com/v1/spaces/AAAA87biPMQ/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI\u0026token=h79HhgjN7mbv34tuod6GCcrZGFeaaQZ_EavTXoquX1g%3D",
            "reprompt": false,
            "revision_date": "2022-12-19T20:11:05.683Z",
            "totp": "",
            "type": 1,
            "uri": [],
            "username": "GOOGLE_CHAT_WEBHOOK"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "github_repository",
      "name": "dev-environment-config",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "default_branch": "main",
            "description": "Common configs for Github and all repositories",
            "fork": false,
            "full_name": "sommerfeld-io/dev-environment-config",
            "git_clone_url": "git://github.com/sommerfeld-io/dev-environment-config.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/sommerfeld-io/dev-environment-config",
            "http_clone_url": "https://github.com/sommerfeld-io/dev-environment-config.git",
            "id": "dev-environment-config",
            "is_template": false,
            "merge_commit_message": "PR_TITLE",
            "merge_commit_title": "MERGE_MESSAGE",
            "name": "dev-environment-config",
            "node_id": "R_kgDOJnUWlA",
            "pages": [],
            "private": false,
            "repo_id": 645207700,
            "squash_merge_commit_message": "COMMIT_MESSAGES",
            "squash_merge_commit_title": "COMMIT_OR_PR_TITLE",
            "ssh_clone_url": "git@github.com:sommerfeld-io/dev-environment-config.git",
            "svn_url": "https://github.com/sommerfeld-io/dev-environment-config",
            "template": [],
            "topics": [],
            "visibility": "public"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "github_repository",
      "name": "github",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "default_branch": "main",
            "description": "",
            "fork": false,
            "full_name": "sommerfeld-io/.github",
            "git_clone_url": "git://github.com/sommerfeld-io/.github.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/sommerfeld-io/.github",
            "http_clone_url": "https://github.com/sommerfeld-io/.github.git",
            "id": ".github",
            "is_template": false,
            "merge_commit_message": "PR_TITLE",
            "merge_commit_title": "MERGE_MESSAGE",
            "name": ".github",
            "node_id": "R_kgDOJnUGNg",
            "pages": [],
            "private": false,
            "repo_id": 645203510,
            "squash_merge_commit_message": "COMMIT_MESSAGES",
            "squash_merge_commit_title": "COMMIT_OR_PR_TITLE",
            "ssh_clone_url": "git@github.com:sommerfeld-io/.github.git",
            "svn_url": "https://github.com/sommerfeld-io/.github",
            "template": [],
            "topics": [],
            "visibility": "public"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "github_repository",
      "name": "infrastructure-config",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "default_branch": "main",
            "description": "Configs to install, configure and provision infrastructure and deploy applications",
            "fork": false,
            "full_name": "sommerfeld-io/infrastructure-config",
            "git_clone_url": "git://github.com/sommerfeld-io/infrastructure-config.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/sommerfeld-io/infrastructure-config",
            "http_clone_url": "https://github.com/sommerfeld-io/infrastructure-config.git",
            "id": "infrastructure-config",
            "is_template": false,
            "merge_commit_message": "PR_TITLE",
            "merge_commit_title": "MERGE_MESSAGE",
            "name": "infrastructure-config",
            "node_id": "R_kgDOJnUVgA",
            "pages": [],
            "private": false,
            "repo_id": 645207424,
            "squash_merge_commit_message": "COMMIT_MESSAGES",
            "squash_merge_commit_title": "COMMIT_OR_PR_TITLE",
            "ssh_clone_url": "git@github.com:sommerfeld-io/infrastructure-config.git",
            "svn_url": "https://github.com/sommerfeld-io/infrastructure-config",
            "template": [],
            "topics": [],
            "visibility": "public"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "github_repository",
      "name": "website",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "default_branch": "main",
            "description": "Landingpage website for www.sommerfeld.io",
            "fork": false,
            "full_name": "sommerfeld-io/website",
            "git_clone_url": "git://github.com/sommerfeld-io/website.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/sommerfeld-io/website",
            "http_clone_url": "https://github.com/sommerfeld-io/website.git",
            "id": "website",
            "is_template": false,
            "merge_commit_message": "PR_TITLE",
            "merge_commit_title": "MERGE_MESSAGE",
            "name": "website",
            "node_id": "R_kgDOJnUTOg",
            "pages": [],
            "private": false,
            "repo_id": 645206842,
            "squash_merge_commit_message": "COMMIT_MESSAGES",
            "squash_merge_commit_title": "COMMIT_OR_PR_TITLE",
            "ssh_clone_url": "git@github.com:sommerfeld-io/website.git",
            "svn_url": "https://github.com/sommerfeld-io/website",
            "template": [],
            "topics": [],
            "visibility": "public"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_actions_secret",
      "name": "dev-environment-config_GH_TOKEN_REPO_AND_PROJECT",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2023-05-25 13:11:44 +0000 UTC",
            "encrypted_value": "",
            "id": "dev-environment-config:GH_TOKEN_REPO_AND_PROJECT",
            "plaintext_value": "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",
            "repository": "dev-environment-config",
            "secret_name": "GH_TOKEN_REPO_AND_PROJECT",
            "updated_at": "2023-05-25 13:11:44 +0000 UTC"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "plaintext_value"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "secret_name"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.bitwarden_item_login.GH_TOKEN_REPO_AND_PROJECT",
            "data.github_repository.dev-environment-config"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_actions_secret",
      "name": "dev-environment-config_GOOGLE_CHAT_WEBHOOK",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2023-05-25 09:42:25 +0000 UTC",
            "encrypted_value": "",
            "id": "dev-environment-config:GOOGLE_CHAT_WEBHOOK",
            "plaintext_value": "https://chat.googleapis.com/v1/spaces/AAAA87biPMQ/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI\u0026token=h79HhgjN7mbv34tuod6GCcrZGFeaaQZ_EavTXoquX1g%3D",
            "repository": "dev-environment-config",
            "secret_name": "GOOGLE_CHAT_WEBHOOK",
            "updated_at": "2023-05-25 12:12:03 +0000 UTC"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "plaintext_value"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "secret_name"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.bitwarden_item_login.GOOGLE_CHAT_WEBHOOK",
            "data.github_repository.dev-environment-config"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_actions_secret",
      "name": "github_GH_TOKEN_REPO_AND_PROJECT",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2023-05-25 13:11:47 +0000 UTC",
            "encrypted_value": "",
            "id": ".github:GH_TOKEN_REPO_AND_PROJECT",
            "plaintext_value": "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",
            "repository": ".github",
            "secret_name": "GH_TOKEN_REPO_AND_PROJECT",
            "updated_at": "2023-05-25 13:11:47 +0000 UTC"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "plaintext_value"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "secret_name"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.bitwarden_item_login.GH_TOKEN_REPO_AND_PROJECT",
            "data.github_repository.github"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_actions_secret",
      "name": "github_GOOGLE_CHAT_WEBHOOK",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2023-05-25 09:42:26 +0000 UTC",
            "encrypted_value": "",
            "id": ".github:GOOGLE_CHAT_WEBHOOK",
            "plaintext_value": "https://chat.googleapis.com/v1/spaces/AAAA87biPMQ/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI\u0026token=h79HhgjN7mbv34tuod6GCcrZGFeaaQZ_EavTXoquX1g%3D",
            "repository": ".github",
            "secret_name": "GOOGLE_CHAT_WEBHOOK",
            "updated_at": "2023-05-25 12:12:07 +0000 UTC"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "secret_name"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "plaintext_value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.bitwarden_item_login.GOOGLE_CHAT_WEBHOOK",
            "data.github_repository.github"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_actions_secret",
      "name": "infrastructure-config_GH_TOKEN_REPO_AND_PROJECT",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2023-05-25 13:11:43 +0000 UTC",
            "encrypted_value": "",
            "id": "infrastructure-config:GH_TOKEN_REPO_AND_PROJECT",
            "plaintext_value": "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",
            "repository": "infrastructure-config",
            "secret_name": "GH_TOKEN_REPO_AND_PROJECT",
            "updated_at": "2023-05-25 13:11:43 +0000 UTC"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "plaintext_value"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "secret_name"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.bitwarden_item_login.GH_TOKEN_REPO_AND_PROJECT",
            "data.github_repository.infrastructure-config"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_actions_secret",
      "name": "infrastructure-config_GOOGLE_CHAT_WEBHOOK",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2023-05-25 09:42:21 +0000 UTC",
            "encrypted_value": "",
            "id": "infrastructure-config:GOOGLE_CHAT_WEBHOOK",
            "plaintext_value": "https://chat.googleapis.com/v1/spaces/AAAA87biPMQ/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI\u0026token=h79HhgjN7mbv34tuod6GCcrZGFeaaQZ_EavTXoquX1g%3D",
            "repository": "infrastructure-config",
            "secret_name": "GOOGLE_CHAT_WEBHOOK",
            "updated_at": "2023-05-25 12:12:04 +0000 UTC"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "secret_name"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "plaintext_value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.bitwarden_item_login.GOOGLE_CHAT_WEBHOOK",
            "data.github_repository.infrastructure-config"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_actions_secret",
      "name": "website_GH_TOKEN_REPO_AND_PROJECT",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2023-05-25 13:11:48 +0000 UTC",
            "encrypted_value": "",
            "id": "website:GH_TOKEN_REPO_AND_PROJECT",
            "plaintext_value": "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",
            "repository": "website",
            "secret_name": "GH_TOKEN_REPO_AND_PROJECT",
            "updated_at": "2023-05-25 13:11:48 +0000 UTC"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "plaintext_value"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "secret_name"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.bitwarden_item_login.GH_TOKEN_REPO_AND_PROJECT",
            "data.github_repository.website"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_actions_secret",
      "name": "website_GOOGLE_CHAT_WEBHOOK",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2023-05-25 09:42:15 +0000 UTC",
            "encrypted_value": "",
            "id": "website:GOOGLE_CHAT_WEBHOOK",
            "plaintext_value": "https://chat.googleapis.com/v1/spaces/AAAA87biPMQ/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI\u0026token=h79HhgjN7mbv34tuod6GCcrZGFeaaQZ_EavTXoquX1g%3D",
            "repository": "website",
            "secret_name": "GOOGLE_CHAT_WEBHOOK",
            "updated_at": "2023-05-25 12:12:06 +0000 UTC"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "plaintext_value"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "secret_name"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.bitwarden_item_login.GOOGLE_CHAT_WEBHOOK",
            "data.github_repository.website"
          ]
        }
      ]
    },
    {
      "module": "module.dev-environment-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_pull_request",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "e3559a4463ece9bbad1a12279791bb0d6ceed2fa",
            "content": "### Description\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nLink Github Issues if possible.\n",
            "file": ".github/PULL_REQUEST_TEMPLATE.md",
            "id": "dev-environment-config/.github/PULL_REQUEST_TEMPLATE.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "dev-environment-config",
            "sha": "589a7b437fa98f6780920e7795f9802ac33eafe0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.dev-environment-config"
          ]
        }
      ]
    },
    {
      "module": "module.dev-environment-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_risk_or_technical_debt",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "54e7477ace862a5e08f4ee00b0b5434ab4351437",
            "content": "---\nname: Risk and/or technical debt\nabout: Describe a Risk and/or a technical debt\ntitle: ''\nlabels: risk, task\nassignees: ''\n---\n\n| Probability | Impact |\n|-------------|--------|\n| _High / Medium / Low_ | _High / Medium / Low_ |\n\n### Description\n_The risk or technical debt ... what exactly is the issue? Add a link to a CVE record if possible._\n\n### Response\n_What action can be taken to mitigate the risk or technical debt?_\n",
            "file": ".github/ISSUE_TEMPLATE/risk-or-technical-debt.md",
            "id": "dev-environment-config/.github/ISSUE_TEMPLATE/risk-or-technical-debt.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "dev-environment-config",
            "sha": "f246cb3ca064697f8e8162cef05dd5a8bbdd353b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.dev-environment-config"
          ]
        }
      ]
    },
    {
      "module": "module.dev-environment-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_user_story",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "ce20cea1587ab04faa84c8846852f2a9f2f59950",
            "content": "---\nname: User Story\nabout: Describe a new feature (only one single feature at best)\ntitle: ''\nlabels: user-story\nassignees: ''\n---\n\nAs a _role_ I can _capability_, so that _receive benefit_.\n\n### Acceptance Criteria\n- [ ] Describe what criteria the user story must meet.\n- [ ] Be precise! \n- [ ] You should be able to create an automated acceptance test case for each criteria.\n- [ ] Think in terms of executable specifications! This helps to develop acceptance test cases.\n\n### Implementation Tasks\n- [ ] List every (technical) todo!\n- [ ] It is advised to create dedicated issues for each todo!\n- [ ] Do not confuse implementation tasks with acceptance criteria!\n",
            "file": ".github/ISSUE_TEMPLATE/user-story.md",
            "id": "dev-environment-config/.github/ISSUE_TEMPLATE/user-story.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "dev-environment-config",
            "sha": "e8edfc4fe28e2acde8aad381ab9ecbd3b5a645b0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.dev-environment-config"
          ]
        }
      ]
    },
    {
      "module": "module.dev-environment-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "workflow_housekeeping-issues",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": "sebastian-sommerfeld-io",
            "commit_email": "sebastian@sommerfeld.io",
            "commit_message": "[Actions Bot] Update Github Actions workflow",
            "commit_sha": "fc01400930c442a3cb2ca387fc89a29beff242e1",
            "content": "---\nname: \"Housekeeping: Issues + PRs\"\n\n# +----------------------------------------------------+\n# |                                                    |\n# |    DO NOT EDIT DIRECTLY !!!!!                      |\n# |                                                    |\n# |    File is managed by terraform. Update file in    |\n# |    sommerfeld-io/dev-envorinment-config repo so    |\n# |    you can apply changes to all repos.             |\n# |                                                    |\n# +----------------------------------------------------+\n\non:\n  issues:\n    types:\n      - opened\n  pull_request:\n    types:\n      - opened\n      - assigned\n\npermissions:\n  contents: read\n  issues: write\n  pull-requests: write\n\njobs:\n  add-issue-to-project:\n    name: Add to project\n    runs-on: ubuntu-latest\n    steps:\n      - name: Add to project (issues and PRs)\n        uses: actions/add-to-project@main\n        with:\n          project-url: https://github.com/orgs/sommerfeld-io/projects/1\n          github-token: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}\n\n  assign-issue-to-user:\n    name: Assign to user\n    runs-on: ubuntu-latest\n    if: \"${{ github.actor != 'dependabot[bot]' }}\"\n    steps:\n      - name: Assign issue to user when moved into column\n        uses: pozil/auto-assign-issue@v1\n        # https://github.com/marketplace/actions/auto-assign-issue\n        with:\n          assignees: ${{ github.actor }}\n          numOfAssignee: 1\n          allowSelfAssign: true\n          abortIfPreviousAssignees: true\n\n  set-issue-labels:\n    name: Set label for issues (if not user-story)\n    runs-on: ubuntu-latest\n    if: \"${{ github.event.issue \u0026\u0026 !contains(github.event.issue.labels.*.name, 'user-story') }}\"\n    steps:\n      - name: Set label\n        uses: actions/github-script@v6\n        with:\n          script: |\n            github.rest.issues.addLabels({\n              issue_number: context.issue.number,\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              labels: ['task']\n            })\n\n  on-failure:\n    runs-on: ubuntu-latest\n    needs: ['add-issue-to-project', 'assign-issue-to-user', 'set-issue-labels']\n    if: failure()\n    steps:\n      - name: Send Pipeline Status to Google Chat\n        if: always()\n        uses: Co-qn/google-chat-notification@releases/v1\n        with:\n          name: ${{ github.workflow }}\n          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}\n          status: failure\n",
            "file": ".github/workflows/housekeeping-issues.yml",
            "id": "dev-environment-config/.github/workflows/housekeeping-issues.yml",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "dev-environment-config",
            "sha": "e4d66a6fef503310987f4dd91d37f78c772da2c5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.dev-environment-config"
          ]
        }
      ]
    },
    {
      "module": "module.dev-environment-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "workflow_housekeeping-labels",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": "sebastian-sommerfeld-io",
            "commit_email": "sebastian@sommerfeld.io",
            "commit_message": "[Actions Bot] Update Github Actions workflow",
            "commit_sha": "1ced31fea623289b62760ecb342426e368796c33",
            "content": "---\nname: \"Housekeeping: Labels\"\n\n# +----------------------------------------------------+\n# |                                                    |\n# |    DO NOT EDIT DIRECTLY !!!!!                      |\n# |                                                    |\n# |    File is managed by terraform. Update file in    |\n# |    sommerfeld-io/dev-envorinment-config repo so    |\n# |    you can apply changes to all repos.             |\n# |                                                    |\n# +----------------------------------------------------+\n\non:\n  schedule:\n    - cron: '0 1 * * *' # https://crontab.guru\n  push:\n    branches:\n      - main\n    paths:\n      - .github/workflows/housekeeping-labels.yml\n\npermissions:\n  contents: read\n  issues: write\n  pull-requests: write\n\njobs:\n  setup-labels:\n    name: Setup labels\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n      - name: Setup labels\n        env:\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}\n        run: |\n          gh label delete \"documentation\" --yes || true\n          gh label delete \"duplicate\" --yes || true\n          gh label delete \"enhancement\" --yes || true\n          gh label delete \"good first issue\" --yes || true\n          gh label delete \"help wanted\" --yes || true\n          gh label delete \"invalid\" --yes || true\n          gh label delete \"question\" --yes || true\n          gh label delete \"wontfix\" --yes || true\n\n          gh label create \"blocked / waiting\" --color \"5319E7\" --description \"Issues that are blocked or waiting for something\" --force\n          gh label create \"bug\" --color \"B60205\" --description \"Something is not working\" --force\n          gh label create \"cancelled\" --color \"726b73\" --description \"No further actions, Issues should be closed\" --force\n          gh label create \"prio-high\" --color \"D93F0B\" --description \"High priority issues\" --force\n          gh label create \"risk\" --color \"cd3ad7\" --description \"Risks and technical debts\" --force\n          gh label create \"security\" --color \"cd3ad7\" --description \"CVEs, code scan violations, etc.\" --force\n          gh label create \"task\" --color \"0052CC\" --description \"Implementation task - relates to a user story (most of the time)\" --force\n          gh label create \"user-story\" --color \"0E8A16\" --description \"User Story to describe a new feature\" --force\n\n          gh label create \"dependencies\" --color \"000000\" --description \"Dependabot: Pull requests that update a dependency file\" --force\n          gh label create \"docker\" --color \"000000\" --description \"Dependabot: Pull requests that update Docker code\" --force\n          gh label create \"github_actions\" --color \"000000\" --description \"Dependabot: Pull requests that update GitHub Actions code\" --force\n          gh label create \"terraform\" --color \"000000\" --description \"Dependabot: Pull requests that update Terraform code\" --force\n          \n        shell: bash\n\n  on-failure:\n    runs-on: ubuntu-latest\n    needs: ['setup-labels']\n    if: failure()\n    steps:\n      - name: Send Pipeline Status to Google Chat\n        if: always()\n        uses: Co-qn/google-chat-notification@releases/v1\n        with:\n          name: ${{ github.workflow }}\n          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}\n          status: failure\n",
            "file": ".github/workflows/housekeeping-labels.yml",
            "id": "dev-environment-config/.github/workflows/housekeeping-labels.yml",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "dev-environment-config",
            "sha": "83cb69574e29e8b0b6264ca777c8b255f1d6e7b7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.dev-environment-config"
          ]
        }
      ]
    },
    {
      "module": "module.github-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_pull_request",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "313990d75be6060c044eeed16bc133517162dfd1",
            "content": "### Description\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nLink Github Issues if possible.\n",
            "file": ".github/PULL_REQUEST_TEMPLATE.md",
            "id": ".github/.github/PULL_REQUEST_TEMPLATE.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": ".github",
            "sha": "589a7b437fa98f6780920e7795f9802ac33eafe0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.github"
          ]
        }
      ]
    },
    {
      "module": "module.github-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_risk_or_technical_debt",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "fd3f9c4fa59296b987d69b362a0fb09993f45ed3",
            "content": "---\nname: Risk and/or technical debt\nabout: Describe a Risk and/or a technical debt\ntitle: ''\nlabels: risk, task\nassignees: ''\n---\n\n| Probability | Impact |\n|-------------|--------|\n| _High / Medium / Low_ | _High / Medium / Low_ |\n\n### Description\n_The risk or technical debt ... what exactly is the issue? Add a link to a CVE record if possible._\n\n### Response\n_What action can be taken to mitigate the risk or technical debt?_\n",
            "file": ".github/ISSUE_TEMPLATE/risk-or-technical-debt.md",
            "id": ".github/.github/ISSUE_TEMPLATE/risk-or-technical-debt.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": ".github",
            "sha": "f246cb3ca064697f8e8162cef05dd5a8bbdd353b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.github"
          ]
        }
      ]
    },
    {
      "module": "module.github-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_user_story",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "2c7a6485691ced690f1bf3b912c2db5b57e6637d",
            "content": "---\nname: User Story\nabout: Describe a new feature (only one single feature at best)\ntitle: ''\nlabels: user-story\nassignees: ''\n---\n\nAs a _role_ I can _capability_, so that _receive benefit_.\n\n### Acceptance Criteria\n- [ ] Describe what criteria the user story must meet.\n- [ ] Be precise! \n- [ ] You should be able to create an automated acceptance test case for each criteria.\n- [ ] Think in terms of executable specifications! This helps to develop acceptance test cases.\n\n### Implementation Tasks\n- [ ] List every (technical) todo!\n- [ ] It is advised to create dedicated issues for each todo!\n- [ ] Do not confuse implementation tasks with acceptance criteria!\n",
            "file": ".github/ISSUE_TEMPLATE/user-story.md",
            "id": ".github/.github/ISSUE_TEMPLATE/user-story.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": ".github",
            "sha": "e8edfc4fe28e2acde8aad381ab9ecbd3b5a645b0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.github"
          ]
        }
      ]
    },
    {
      "module": "module.github-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "workflow_housekeeping-issues",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": "sebastian-sommerfeld-io",
            "commit_email": "sebastian@sommerfeld.io",
            "commit_message": "[Actions Bot] Update Github Actions workflow",
            "commit_sha": "63fcacf2ef54955b9e73a5f03bb36742f337d757",
            "content": "---\nname: \"Housekeeping: Issues + PRs\"\n\n# +----------------------------------------------------+\n# |                                                    |\n# |    DO NOT EDIT DIRECTLY !!!!!                      |\n# |                                                    |\n# |    File is managed by terraform. Update file in    |\n# |    sommerfeld-io/dev-envorinment-config repo so    |\n# |    you can apply changes to all repos.             |\n# |                                                    |\n# +----------------------------------------------------+\n\non:\n  issues:\n    types:\n      - opened\n  pull_request:\n    types:\n      - opened\n      - assigned\n\npermissions:\n  contents: read\n  issues: write\n  pull-requests: write\n\njobs:\n  add-issue-to-project:\n    name: Add to project\n    runs-on: ubuntu-latest\n    steps:\n      - name: Add to project (issues and PRs)\n        uses: actions/add-to-project@main\n        with:\n          project-url: https://github.com/orgs/sommerfeld-io/projects/1\n          github-token: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}\n\n  assign-issue-to-user:\n    name: Assign to user\n    runs-on: ubuntu-latest\n    if: \"${{ github.actor != 'dependabot[bot]' }}\"\n    steps:\n      - name: Assign issue to user when moved into column\n        uses: pozil/auto-assign-issue@v1\n        # https://github.com/marketplace/actions/auto-assign-issue\n        with:\n          assignees: ${{ github.actor }}\n          numOfAssignee: 1\n          allowSelfAssign: true\n          abortIfPreviousAssignees: true\n\n  set-issue-labels:\n    name: Set label for issues (if not user-story)\n    runs-on: ubuntu-latest\n    if: \"${{ github.event.issue \u0026\u0026 !contains(github.event.issue.labels.*.name, 'user-story') }}\"\n    steps:\n      - name: Set label\n        uses: actions/github-script@v6\n        with:\n          script: |\n            github.rest.issues.addLabels({\n              issue_number: context.issue.number,\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              labels: ['task']\n            })\n\n  on-failure:\n    runs-on: ubuntu-latest\n    needs: ['add-issue-to-project', 'assign-issue-to-user', 'set-issue-labels']\n    if: failure()\n    steps:\n      - name: Send Pipeline Status to Google Chat\n        if: always()\n        uses: Co-qn/google-chat-notification@releases/v1\n        with:\n          name: ${{ github.workflow }}\n          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}\n          status: failure\n",
            "file": ".github/workflows/housekeeping-issues.yml",
            "id": ".github/.github/workflows/housekeeping-issues.yml",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": ".github",
            "sha": "e4d66a6fef503310987f4dd91d37f78c772da2c5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.github"
          ]
        }
      ]
    },
    {
      "module": "module.github-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "workflow_housekeeping-labels",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": "sebastian-sommerfeld-io",
            "commit_email": "sebastian@sommerfeld.io",
            "commit_message": "[Actions Bot] Update Github Actions workflow",
            "commit_sha": "19a9cc4e73193b8610caca801b9bace5add46f79",
            "content": "---\nname: \"Housekeeping: Labels\"\n\n# +----------------------------------------------------+\n# |                                                    |\n# |    DO NOT EDIT DIRECTLY !!!!!                      |\n# |                                                    |\n# |    File is managed by terraform. Update file in    |\n# |    sommerfeld-io/dev-envorinment-config repo so    |\n# |    you can apply changes to all repos.             |\n# |                                                    |\n# +----------------------------------------------------+\n\non:\n  schedule:\n    - cron: '0 1 * * *' # https://crontab.guru\n  push:\n    branches:\n      - main\n    paths:\n      - .github/workflows/housekeeping-labels.yml\n\npermissions:\n  contents: read\n  issues: write\n  pull-requests: write\n\njobs:\n  setup-labels:\n    name: Setup labels\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n      - name: Setup labels\n        env:\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}\n        run: |\n          gh label delete \"documentation\" --yes || true\n          gh label delete \"duplicate\" --yes || true\n          gh label delete \"enhancement\" --yes || true\n          gh label delete \"good first issue\" --yes || true\n          gh label delete \"help wanted\" --yes || true\n          gh label delete \"invalid\" --yes || true\n          gh label delete \"question\" --yes || true\n          gh label delete \"wontfix\" --yes || true\n\n          gh label create \"blocked / waiting\" --color \"5319E7\" --description \"Issues that are blocked or waiting for something\" --force\n          gh label create \"bug\" --color \"B60205\" --description \"Something is not working\" --force\n          gh label create \"cancelled\" --color \"726b73\" --description \"No further actions, Issues should be closed\" --force\n          gh label create \"prio-high\" --color \"D93F0B\" --description \"High priority issues\" --force\n          gh label create \"risk\" --color \"cd3ad7\" --description \"Risks and technical debts\" --force\n          gh label create \"security\" --color \"cd3ad7\" --description \"CVEs, code scan violations, etc.\" --force\n          gh label create \"task\" --color \"0052CC\" --description \"Implementation task - relates to a user story (most of the time)\" --force\n          gh label create \"user-story\" --color \"0E8A16\" --description \"User Story to describe a new feature\" --force\n\n          gh label create \"dependencies\" --color \"000000\" --description \"Dependabot: Pull requests that update a dependency file\" --force\n          gh label create \"docker\" --color \"000000\" --description \"Dependabot: Pull requests that update Docker code\" --force\n          gh label create \"github_actions\" --color \"000000\" --description \"Dependabot: Pull requests that update GitHub Actions code\" --force\n          gh label create \"terraform\" --color \"000000\" --description \"Dependabot: Pull requests that update Terraform code\" --force\n          \n        shell: bash\n\n  on-failure:\n    runs-on: ubuntu-latest\n    needs: ['setup-labels']\n    if: failure()\n    steps:\n      - name: Send Pipeline Status to Google Chat\n        if: always()\n        uses: Co-qn/google-chat-notification@releases/v1\n        with:\n          name: ${{ github.workflow }}\n          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}\n          status: failure\n",
            "file": ".github/workflows/housekeeping-labels.yml",
            "id": ".github/.github/workflows/housekeeping-labels.yml",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": ".github",
            "sha": "83cb69574e29e8b0b6264ca777c8b255f1d6e7b7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.github"
          ]
        }
      ]
    },
    {
      "module": "module.infrastructure-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_pull_request",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "917c8620549614591779d227482312813e679580",
            "content": "### Description\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nLink Github Issues if possible.\n",
            "file": ".github/PULL_REQUEST_TEMPLATE.md",
            "id": "infrastructure-config/.github/PULL_REQUEST_TEMPLATE.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "infrastructure-config",
            "sha": "589a7b437fa98f6780920e7795f9802ac33eafe0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.infrastructure-config"
          ]
        }
      ]
    },
    {
      "module": "module.infrastructure-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_risk_or_technical_debt",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "5181adacb69b58bc6a5088f41ca8c58d9e5265e0",
            "content": "---\nname: Risk and/or technical debt\nabout: Describe a Risk and/or a technical debt\ntitle: ''\nlabels: risk, task\nassignees: ''\n---\n\n| Probability | Impact |\n|-------------|--------|\n| _High / Medium / Low_ | _High / Medium / Low_ |\n\n### Description\n_The risk or technical debt ... what exactly is the issue? Add a link to a CVE record if possible._\n\n### Response\n_What action can be taken to mitigate the risk or technical debt?_\n",
            "file": ".github/ISSUE_TEMPLATE/risk-or-technical-debt.md",
            "id": "infrastructure-config/.github/ISSUE_TEMPLATE/risk-or-technical-debt.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "infrastructure-config",
            "sha": "f246cb3ca064697f8e8162cef05dd5a8bbdd353b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.infrastructure-config"
          ]
        }
      ]
    },
    {
      "module": "module.infrastructure-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_user_story",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "c5c2feb27feb0c3d47c15c8fcdb16987ddda8209",
            "content": "---\nname: User Story\nabout: Describe a new feature (only one single feature at best)\ntitle: ''\nlabels: user-story\nassignees: ''\n---\n\nAs a _role_ I can _capability_, so that _receive benefit_.\n\n### Acceptance Criteria\n- [ ] Describe what criteria the user story must meet.\n- [ ] Be precise! \n- [ ] You should be able to create an automated acceptance test case for each criteria.\n- [ ] Think in terms of executable specifications! This helps to develop acceptance test cases.\n\n### Implementation Tasks\n- [ ] List every (technical) todo!\n- [ ] It is advised to create dedicated issues for each todo!\n- [ ] Do not confuse implementation tasks with acceptance criteria!\n",
            "file": ".github/ISSUE_TEMPLATE/user-story.md",
            "id": "infrastructure-config/.github/ISSUE_TEMPLATE/user-story.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "infrastructure-config",
            "sha": "e8edfc4fe28e2acde8aad381ab9ecbd3b5a645b0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.infrastructure-config"
          ]
        }
      ]
    },
    {
      "module": "module.infrastructure-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "workflow_housekeeping-issues",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": "sebastian-sommerfeld-io",
            "commit_email": "sebastian@sommerfeld.io",
            "commit_message": "[Actions Bot] Update Github Actions workflow",
            "commit_sha": "1870e73d9c5807d5afaca50c8a8f6b396ee5d2ab",
            "content": "---\nname: \"Housekeeping: Issues + PRs\"\n\n# +----------------------------------------------------+\n# |                                                    |\n# |    DO NOT EDIT DIRECTLY !!!!!                      |\n# |                                                    |\n# |    File is managed by terraform. Update file in    |\n# |    sommerfeld-io/dev-envorinment-config repo so    |\n# |    you can apply changes to all repos.             |\n# |                                                    |\n# +----------------------------------------------------+\n\non:\n  issues:\n    types:\n      - opened\n  pull_request:\n    types:\n      - opened\n      - assigned\n\npermissions:\n  contents: read\n  issues: write\n  pull-requests: write\n\njobs:\n  add-issue-to-project:\n    name: Add to project\n    runs-on: ubuntu-latest\n    steps:\n      - name: Add to project (issues and PRs)\n        uses: actions/add-to-project@main\n        with:\n          project-url: https://github.com/orgs/sommerfeld-io/projects/1\n          github-token: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}\n\n  assign-issue-to-user:\n    name: Assign to user\n    runs-on: ubuntu-latest\n    if: \"${{ github.actor != 'dependabot[bot]' }}\"\n    steps:\n      - name: Assign issue to user when moved into column\n        uses: pozil/auto-assign-issue@v1\n        # https://github.com/marketplace/actions/auto-assign-issue\n        with:\n          assignees: ${{ github.actor }}\n          numOfAssignee: 1\n          allowSelfAssign: true\n          abortIfPreviousAssignees: true\n\n  set-issue-labels:\n    name: Set label for issues (if not user-story)\n    runs-on: ubuntu-latest\n    if: \"${{ github.event.issue \u0026\u0026 !contains(github.event.issue.labels.*.name, 'user-story') }}\"\n    steps:\n      - name: Set label\n        uses: actions/github-script@v6\n        with:\n          script: |\n            github.rest.issues.addLabels({\n              issue_number: context.issue.number,\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              labels: ['task']\n            })\n\n  on-failure:\n    runs-on: ubuntu-latest\n    needs: ['add-issue-to-project', 'assign-issue-to-user', 'set-issue-labels']\n    if: failure()\n    steps:\n      - name: Send Pipeline Status to Google Chat\n        if: always()\n        uses: Co-qn/google-chat-notification@releases/v1\n        with:\n          name: ${{ github.workflow }}\n          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}\n          status: failure\n",
            "file": ".github/workflows/housekeeping-issues.yml",
            "id": "infrastructure-config/.github/workflows/housekeeping-issues.yml",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "infrastructure-config",
            "sha": "e4d66a6fef503310987f4dd91d37f78c772da2c5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.infrastructure-config"
          ]
        }
      ]
    },
    {
      "module": "module.infrastructure-config-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "workflow_housekeeping-labels",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": "sebastian-sommerfeld-io",
            "commit_email": "sebastian@sommerfeld.io",
            "commit_message": "[Actions Bot] Update Github Actions workflow",
            "commit_sha": "c349a4968c8f93d68989c8e9ddbdad55dab1ed8f",
            "content": "---\nname: \"Housekeeping: Labels\"\n\n# +----------------------------------------------------+\n# |                                                    |\n# |    DO NOT EDIT DIRECTLY !!!!!                      |\n# |                                                    |\n# |    File is managed by terraform. Update file in    |\n# |    sommerfeld-io/dev-envorinment-config repo so    |\n# |    you can apply changes to all repos.             |\n# |                                                    |\n# +----------------------------------------------------+\n\non:\n  schedule:\n    - cron: '0 1 * * *' # https://crontab.guru\n  push:\n    branches:\n      - main\n    paths:\n      - .github/workflows/housekeeping-labels.yml\n\npermissions:\n  contents: read\n  issues: write\n  pull-requests: write\n\njobs:\n  setup-labels:\n    name: Setup labels\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n      - name: Setup labels\n        env:\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}\n        run: |\n          gh label delete \"documentation\" --yes || true\n          gh label delete \"duplicate\" --yes || true\n          gh label delete \"enhancement\" --yes || true\n          gh label delete \"good first issue\" --yes || true\n          gh label delete \"help wanted\" --yes || true\n          gh label delete \"invalid\" --yes || true\n          gh label delete \"question\" --yes || true\n          gh label delete \"wontfix\" --yes || true\n\n          gh label create \"blocked / waiting\" --color \"5319E7\" --description \"Issues that are blocked or waiting for something\" --force\n          gh label create \"bug\" --color \"B60205\" --description \"Something is not working\" --force\n          gh label create \"cancelled\" --color \"726b73\" --description \"No further actions, Issues should be closed\" --force\n          gh label create \"prio-high\" --color \"D93F0B\" --description \"High priority issues\" --force\n          gh label create \"risk\" --color \"cd3ad7\" --description \"Risks and technical debts\" --force\n          gh label create \"security\" --color \"cd3ad7\" --description \"CVEs, code scan violations, etc.\" --force\n          gh label create \"task\" --color \"0052CC\" --description \"Implementation task - relates to a user story (most of the time)\" --force\n          gh label create \"user-story\" --color \"0E8A16\" --description \"User Story to describe a new feature\" --force\n\n          gh label create \"dependencies\" --color \"000000\" --description \"Dependabot: Pull requests that update a dependency file\" --force\n          gh label create \"docker\" --color \"000000\" --description \"Dependabot: Pull requests that update Docker code\" --force\n          gh label create \"github_actions\" --color \"000000\" --description \"Dependabot: Pull requests that update GitHub Actions code\" --force\n          gh label create \"terraform\" --color \"000000\" --description \"Dependabot: Pull requests that update Terraform code\" --force\n          \n        shell: bash\n\n  on-failure:\n    runs-on: ubuntu-latest\n    needs: ['setup-labels']\n    if: failure()\n    steps:\n      - name: Send Pipeline Status to Google Chat\n        if: always()\n        uses: Co-qn/google-chat-notification@releases/v1\n        with:\n          name: ${{ github.workflow }}\n          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}\n          status: failure\n",
            "file": ".github/workflows/housekeeping-labels.yml",
            "id": "infrastructure-config/.github/workflows/housekeeping-labels.yml",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "infrastructure-config",
            "sha": "83cb69574e29e8b0b6264ca777c8b255f1d6e7b7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.infrastructure-config"
          ]
        }
      ]
    },
    {
      "module": "module.website-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_pull_request",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "c55c1d4b181179c0a5ba73b3efaae1d408010d61",
            "content": "### Description\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nLink Github Issues if possible.\n",
            "file": ".github/PULL_REQUEST_TEMPLATE.md",
            "id": "website/.github/PULL_REQUEST_TEMPLATE.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "website",
            "sha": "589a7b437fa98f6780920e7795f9802ac33eafe0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.website"
          ]
        }
      ]
    },
    {
      "module": "module.website-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_risk_or_technical_debt",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "27ac9fa4a4d1d3ffe803e4ee1c36ebc2e754c9ae",
            "content": "---\nname: Risk and/or technical debt\nabout: Describe a Risk and/or a technical debt\ntitle: ''\nlabels: risk, task\nassignees: ''\n---\n\n| Probability | Impact |\n|-------------|--------|\n| _High / Medium / Low_ | _High / Medium / Low_ |\n\n### Description\n_The risk or technical debt ... what exactly is the issue? Add a link to a CVE record if possible._\n\n### Response\n_What action can be taken to mitigate the risk or technical debt?_\n",
            "file": ".github/ISSUE_TEMPLATE/risk-or-technical-debt.md",
            "id": "website/.github/ISSUE_TEMPLATE/risk-or-technical-debt.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "website",
            "sha": "f246cb3ca064697f8e8162cef05dd5a8bbdd353b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.website"
          ]
        }
      ]
    },
    {
      "module": "module.website-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "template_user_story",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": null,
            "commit_email": null,
            "commit_message": "[Actions Bot] Template update",
            "commit_sha": "56be8f3baa35bf788c47733f65436b187fde2d4d",
            "content": "---\nname: User Story\nabout: Describe a new feature (only one single feature at best)\ntitle: ''\nlabels: user-story\nassignees: ''\n---\n\nAs a _role_ I can _capability_, so that _receive benefit_.\n\n### Acceptance Criteria\n- [ ] Describe what criteria the user story must meet.\n- [ ] Be precise! \n- [ ] You should be able to create an automated acceptance test case for each criteria.\n- [ ] Think in terms of executable specifications! This helps to develop acceptance test cases.\n\n### Implementation Tasks\n- [ ] List every (technical) todo!\n- [ ] It is advised to create dedicated issues for each todo!\n- [ ] Do not confuse implementation tasks with acceptance criteria!\n",
            "file": ".github/ISSUE_TEMPLATE/user-story.md",
            "id": "website/.github/ISSUE_TEMPLATE/user-story.md",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "website",
            "sha": "e8edfc4fe28e2acde8aad381ab9ecbd3b5a645b0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.website"
          ]
        }
      ]
    },
    {
      "module": "module.website-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "workflow_housekeeping-issues",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": "sebastian-sommerfeld-io",
            "commit_email": "sebastian@sommerfeld.io",
            "commit_message": "[Actions Bot] Update Github Actions workflow",
            "commit_sha": "cf5e0c7b21bf333992aca983caeae1c5cd50a631",
            "content": "---\nname: \"Housekeeping: Issues + PRs\"\n\n# +----------------------------------------------------+\n# |                                                    |\n# |    DO NOT EDIT DIRECTLY !!!!!                      |\n# |                                                    |\n# |    File is managed by terraform. Update file in    |\n# |    sommerfeld-io/dev-envorinment-config repo so    |\n# |    you can apply changes to all repos.             |\n# |                                                    |\n# +----------------------------------------------------+\n\non:\n  issues:\n    types:\n      - opened\n  pull_request:\n    types:\n      - opened\n      - assigned\n\npermissions:\n  contents: read\n  issues: write\n  pull-requests: write\n\njobs:\n  add-issue-to-project:\n    name: Add to project\n    runs-on: ubuntu-latest\n    steps:\n      - name: Add to project (issues and PRs)\n        uses: actions/add-to-project@main\n        with:\n          project-url: https://github.com/orgs/sommerfeld-io/projects/1\n          github-token: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}\n\n  assign-issue-to-user:\n    name: Assign to user\n    runs-on: ubuntu-latest\n    if: \"${{ github.actor != 'dependabot[bot]' }}\"\n    steps:\n      - name: Assign issue to user when moved into column\n        uses: pozil/auto-assign-issue@v1\n        # https://github.com/marketplace/actions/auto-assign-issue\n        with:\n          assignees: ${{ github.actor }}\n          numOfAssignee: 1\n          allowSelfAssign: true\n          abortIfPreviousAssignees: true\n\n  set-issue-labels:\n    name: Set label for issues (if not user-story)\n    runs-on: ubuntu-latest\n    if: \"${{ github.event.issue \u0026\u0026 !contains(github.event.issue.labels.*.name, 'user-story') }}\"\n    steps:\n      - name: Set label\n        uses: actions/github-script@v6\n        with:\n          script: |\n            github.rest.issues.addLabels({\n              issue_number: context.issue.number,\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              labels: ['task']\n            })\n\n  on-failure:\n    runs-on: ubuntu-latest\n    needs: ['add-issue-to-project', 'assign-issue-to-user', 'set-issue-labels']\n    if: failure()\n    steps:\n      - name: Send Pipeline Status to Google Chat\n        if: always()\n        uses: Co-qn/google-chat-notification@releases/v1\n        with:\n          name: ${{ github.workflow }}\n          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}\n          status: failure\n",
            "file": ".github/workflows/housekeeping-issues.yml",
            "id": "website/.github/workflows/housekeeping-issues.yml",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "website",
            "sha": "e4d66a6fef503310987f4dd91d37f78c772da2c5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.website"
          ]
        }
      ]
    },
    {
      "module": "module.website-housekeeping",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "workflow_housekeeping-labels",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "branch": "main",
            "commit_author": "sebastian-sommerfeld-io",
            "commit_email": "sebastian@sommerfeld.io",
            "commit_message": "[Actions Bot] Update Github Actions workflow",
            "commit_sha": "ba5cb019bb2bd8a5dfabe8614cabf15c22ae73aa",
            "content": "---\nname: \"Housekeeping: Labels\"\n\n# +----------------------------------------------------+\n# |                                                    |\n# |    DO NOT EDIT DIRECTLY !!!!!                      |\n# |                                                    |\n# |    File is managed by terraform. Update file in    |\n# |    sommerfeld-io/dev-envorinment-config repo so    |\n# |    you can apply changes to all repos.             |\n# |                                                    |\n# +----------------------------------------------------+\n\non:\n  schedule:\n    - cron: '0 1 * * *' # https://crontab.guru\n  push:\n    branches:\n      - main\n    paths:\n      - .github/workflows/housekeeping-labels.yml\n\npermissions:\n  contents: read\n  issues: write\n  pull-requests: write\n\njobs:\n  setup-labels:\n    name: Setup labels\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n      - name: Setup labels\n        env:\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}\n        run: |\n          gh label delete \"documentation\" --yes || true\n          gh label delete \"duplicate\" --yes || true\n          gh label delete \"enhancement\" --yes || true\n          gh label delete \"good first issue\" --yes || true\n          gh label delete \"help wanted\" --yes || true\n          gh label delete \"invalid\" --yes || true\n          gh label delete \"question\" --yes || true\n          gh label delete \"wontfix\" --yes || true\n\n          gh label create \"blocked / waiting\" --color \"5319E7\" --description \"Issues that are blocked or waiting for something\" --force\n          gh label create \"bug\" --color \"B60205\" --description \"Something is not working\" --force\n          gh label create \"cancelled\" --color \"726b73\" --description \"No further actions, Issues should be closed\" --force\n          gh label create \"prio-high\" --color \"D93F0B\" --description \"High priority issues\" --force\n          gh label create \"risk\" --color \"cd3ad7\" --description \"Risks and technical debts\" --force\n          gh label create \"security\" --color \"cd3ad7\" --description \"CVEs, code scan violations, etc.\" --force\n          gh label create \"task\" --color \"0052CC\" --description \"Implementation task - relates to a user story (most of the time)\" --force\n          gh label create \"user-story\" --color \"0E8A16\" --description \"User Story to describe a new feature\" --force\n\n          gh label create \"dependencies\" --color \"000000\" --description \"Dependabot: Pull requests that update a dependency file\" --force\n          gh label create \"docker\" --color \"000000\" --description \"Dependabot: Pull requests that update Docker code\" --force\n          gh label create \"github_actions\" --color \"000000\" --description \"Dependabot: Pull requests that update GitHub Actions code\" --force\n          gh label create \"terraform\" --color \"000000\" --description \"Dependabot: Pull requests that update Terraform code\" --force\n          \n        shell: bash\n\n  on-failure:\n    runs-on: ubuntu-latest\n    needs: ['setup-labels']\n    if: failure()\n    steps:\n      - name: Send Pipeline Status to Google Chat\n        if: always()\n        uses: Co-qn/google-chat-notification@releases/v1\n        with:\n          name: ${{ github.workflow }}\n          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}\n          status: failure\n",
            "file": ".github/workflows/housekeeping-labels.yml",
            "id": "website/.github/workflows/housekeeping-labels.yml",
            "overwrite_on_create": true,
            "ref": "main",
            "repository": "website",
            "sha": "83cb69574e29e8b0b6264ca777c8b255f1d6e7b7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.github_repository.website"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
